{"version":3,"sources":["components/Border.jsx","components/Reading.jsx","components/Face.jsx","components/Dial.jsx","components/RoomTemperatureController.jsx","States.js","BusinessLogic.js","App.js","index.js"],"names":["Border","className","Reading","tc","tt","Face","mode","useState","faceMode","setFaceMode","useEffect","viewBox","xmlns","d","Dial","onTTChange","onMouseMove","e","console","log","origin","document","getElementsByClassName","xOrigin","getBoundingClientRect","left","yOrigin","top","xCoordinate","pageX","yCoordinate","pageY","bearing","Math","atan2","PI","value","round","onMouseUp","removeEventListener","onMouseDown","addEventListener","RoomTemperatureController","onTCChange","type","min","max","onChange","target","states","Machine","id","initial","idle","on","isCold","isHot","isComfortable","heating","heated","stillHeating","cooling","cooled","stillCooling","BusinessLogic","dt","dtcool","dtheat","this","currentMode","resultingEvent","App","setTc","setTt","bizLogic","useMachine","send","thermostatModeSelect","handler","val","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a182706e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Border.css';\r\n\r\nfunction Border() {\r\n    return (\r\n    <div className=\"border-container\">\r\n        <div className=\"first-border-layer\">\r\n            <div className=\"second-border-layer\">\r\n                <div className=\"nipple\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Border;","import React from 'react';\r\nimport './Reading.css';\r\n\r\nfunction Reading({tc, tt}) {\r\n    const dt = 2;\r\n    const dtCool = 1.5;\r\n    const dtHeat = 1;\r\n    return (\r\n        <div>\r\n            <div className=\"temp-reading-desired\">{tt}</div>  \r\n            <div className=\"temp-reading-current\">Current: {tc}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reading;","import React, { useEffect, useState } from 'react';\r\nimport './Face.css';\r\nimport Reading from './Reading';\r\n\r\nfunction Face({tc, tt, mode}) {\r\n    const [faceMode, setFaceMode] = useState(\"circle-plate\");\r\n    const onFaceModeChange = () => {\r\n        if (mode === \"idle\") {\r\n            setFaceMode(\"circle-plate\");\r\n        } else if (mode === \"heating\") {\r\n            setFaceMode(\"circle-plate-heating\");\r\n        } else {\r\n            setFaceMode(\"circle-plate-cooling\");\r\n        }\r\n    }\r\n    useEffect(() => onFaceModeChange(),[mode]);\r\n    return (\r\n        <div className=\"temp-reading-container\">\r\n            <div className={faceMode}>\r\n                <Reading tc={tc} tt={tt}/>\r\n                <div className=\"sun-icon\">\r\n                    <svg viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path className=\"svg-sun-icon\" d=\"M12, 9c1.65, 0, 3, 1.35, 3, 3s-1.35, 3-3, 3s-3-1.35-3-3 S10.35, 9, 12, 9 \r\n                            M12, 7c-2.76, 0-5, 2.24-5, 5s2.24, 5, 5, 5s5-2.24, 5-5 S14.76, 7, 12, 7L12, 7z \r\n                            M2, 13l2, 0c0.55, 0, 1-0.45, 1-1s-0.45-1-1-1l-2, 0c-0.55, 0-1,0.45-1, 1S1.45,13,2, 13z \r\n                            M20, 13l2, 0c0.55, 0, 1-0.45, 1-1 s-0.45-1-1-1l-2, 0c-0.55, 0-1, 0.45-1, 1S19.45, 13, 20, 13z \r\n                            M11, 2v2c0, 0.55, 0.45, 1, 1, 1s1-0.45, 1-1V2c0-0.55-0.45-1-1-1S11, 1.45, 11, 2z \r\n                            M11, 20v2c0,0.55,0.45,1,1,1s1-0.45,1-1v-2c0-0.55-0.45-1-1-1C11.45, \r\n                            19,11,19.45,11,20z M5.99,4.58c-0.39-0.39-1.03-0.39-1.41,0 c-0.39,\r\n                            0.39-0.39,1.03,0,1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0s0.39-1.03, 0-1.41L5.99,4.58z \r\n                            M18.36,16.95 c-0.39-0.39-1.03-0.39-1.41,0c-0.39,0.39-0.39, 1.03,0,\r\n                            1.41l1.06,1.06c0.39,0.39,1.03,0.39,1.41,0c0.39-0.39,0.39-1.03, 0-1.41 \r\n                            L18.36,16.95z \r\n                            M19.42,5.99c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,\r\n                            0l-1.06,1.06c-0.39,0.39-0.39,1.03,0,1.41 s1.03,0.39,1.41,0L19.42,5.99z \r\n                            M7.05,18.36c0.39-0.39,0.39-1.03,0-1.41c-0.39-0.39-1.03-0.39-1.41,\r\n                            0l-1.06,1.06 c-0.39,0.39-0.39,1.03,0,1.41s1.03,0.39,1.41,0L7.05,18.36z\"></path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            <div className=\"segment\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Face;","import React from 'react';\r\nimport './Dial.css';\r\n\r\nfunction Dial({onTTChange}) {\r\n    const onMouseDown = (e) => {\r\n        document.addEventListener(\"mousemove\", onMouseMove);\r\n        console.log(\"mouse down\");\r\n        document.addEventListener(\"mouseup\", onMouseUp);\r\n    }\r\n\r\n    const onMouseMove = (e) => {\r\n        console.log(\"mouse is clicked and moving\");\r\n        let origin = document.getElementsByClassName(\"center\")[0];\r\n        const xOrigin = origin.getBoundingClientRect().left;\r\n        const yOrigin = origin.getBoundingClientRect().top;\r\n        const xCoordinate = e.pageX;\r\n        const yCoordinate = e.pageY;\r\n        const bearing = Math.atan2(xCoordinate-xOrigin, -(yCoordinate-yOrigin)) * (180/Math.PI) ;\r\n        const value = 65 + Math.round(bearing/10);\r\n        onTTChange(value);\r\n        console.log(bearing);\r\n    }\r\n\r\n    const onMouseUp = () => {\r\n        console.log(\"mouse is up\");\r\n        document.removeEventListener(\"mousemove\", onMouseMove);\r\n    }\r\n    return (\r\n        <div className=\"dial-container\" onMouseDown={(e) => onMouseDown(e)}>\r\n            <div className=\"graduations\" ></div>\r\n            <div className=\"center\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dial;","import React from 'react';\r\nimport './RoomTemperatureController.css';\r\n\r\nfunction RoomTemperatureController({tc, onTCChange}) {\r\n    return (\r\n        <div className=\"rt-controller-container\">\r\n            <input type=\"number\" min=\"32\" max=\"100\" value={tc} onChange={(e) => onTCChange(e.target.value)}/>\r\n            <input type=\"range\" min=\"32\" max=\"100\" value={tc} onChange={(e) => onTCChange(e.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RoomTemperatureController;","import { Machine } from 'xstate';\r\n\r\nconst states = Machine({\r\n    id: 'Thermostat mode',\r\n    initial: 'idle',\r\n    states: {\r\n      idle: {\r\n        on: {\r\n          isCold: 'heating',\r\n          isHot: 'cooling',\r\n          isComfortable: 'idle'\r\n        }\r\n      },\r\n      heating: {\r\n        on: {\r\n          heated: 'idle',\r\n          stillHeating: 'heating'\r\n        }\r\n      },\r\n      cooling: {\r\n        on: {\r\n          cooled: 'idle',\r\n          stillCooling: 'cooling'\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  export default states;\r\n  ","class BusinessLogic {\r\n    \r\n    constructor(tc, tt, dt, dtcool, dtheat) {\r\n        this.tc = tc;\r\n        this.tt = tt;\r\n        this.dt = dt;\r\n        this.dtcool = dtcool;\r\n        this.dtheat = dtheat;\r\n    }\r\n\r\n    thermostatModeSelect(tc, tt, currentMode) {\r\n        var resultingEvent;\r\n        switch(currentMode) {\r\n            case 'idle':\r\n                if (tc >= tt + this.dt + this.dtheat) {\r\n                    resultingEvent = 'isHot';\r\n                } else if (tc <= tt - this.dt - this.dtcool) {\r\n                    resultingEvent = 'isCold';\r\n                } else {\r\n                    resultingEvent = 'isComfortable';\r\n                }\r\n                break;\r\n            case 'heating':\r\n                if (tc >= tt + this.dt) {\r\n                    resultingEvent = 'heated';\r\n                } else {\r\n                    resultingEvent = 'stillHeating';\r\n                }\r\n                break;\r\n            case 'cooling':\r\n                if (tc <= tt - this.dt) {\r\n                    resultingEvent = 'cooled';\r\n                } else {\r\n                    resultingEvent = 'stillCooling';\r\n                }\r\n                break;\r\n        }\r\n        return resultingEvent;\r\n    }\r\n}\r\n\r\nexport default BusinessLogic;","import './App.css';\nimport Border from './components/Border';\nimport Face from './components/Face';\nimport Dial from './components/Dial';\nimport RoomTemperatureController from './components/RoomTemperatureController';\nimport { useEffect, useState } from 'react';\nimport { useMachine } from '@xstate/react';\nimport states from './States';\nimport BusinessLogic from './BusinessLogic';\n\nfunction App() {\n  const [tc, setTc] = useState(72);\n  const onTCChange = (val) => {\n    setTc(val);\n  }\n  const [tt, setTt] = useState(72);\n  const onTTChange = (val) => {\n    if (val >= 50 && val <= 80) {\n    setTt(val);\n    }\n  }\n  const bizLogic = new BusinessLogic(tc, tt, 2, 1.5, 1);\n  const [currentMode, send] = useMachine(states);\n  const handler = () => {\n    const resultingEvent = bizLogic.thermostatModeSelect(tc, tt, currentMode.value);\n    send(resultingEvent);\n  }\n  useEffect(() => handler(), [tc, tt])\n\n  return (\n    <>\n    <div className=\"Wrapper\">\n      <Border/>\n      <Face tc={tc} tt={tt} mode={currentMode.value}/>\n      <Dial onTTChange={onTTChange}/>\n    </div>\n    <RoomTemperatureController tc={tc} onTCChange={onTCChange}/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}